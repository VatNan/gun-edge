{"version":3,"sources":["out.js"],"names":["out","instOf","clazz","Object","val","notOriginator","selfId","selfid","node","soul","data","calcOut","edge","v","def","get","propId","mapReduce","filters","navigation","key","keys","values","edgeNode","valAsync","res","valueAsync"],"mappings":";;;;;QAiCsBA,G,GAAAA,G;;AAjCtB;;;;AACA;;;;;;AAEA,IAAMC,SAAS,SAATA,MAAS,GAAoB;AAAA,MAAnBC,KAAmB,uEAAXC,MAAW;;AACjC,SAAO,UAACC,GAAD,EAAS;AACd,WAAOA,eAAeF,KAAtB;AACD,GAFD;AAGD,CAJD;;AAMA,IAAMG,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAChC,SAAO;AAAA,WAAQC,WAAW,cAAIC,IAAJ,CAASC,IAAT,CAAcC,IAAd,CAAnB;AAAA,GAAP;AACD,CAFD;;AAIA;AACA,eAAeC,OAAf,CAAuBL,MAAvB,EAA+BN,GAA/B,EAAoCY,IAApC,EAA0CC,CAA1C,EAA6C;AAC3C,MAAMC,MAAMF,KAAKG,GAAL,CAASf,GAAT,CAAZ;AACA,MAAMgB,SAAS,cAAIR,IAAJ,CAASC,IAAT,CAAcI,CAAd,CAAf;AACA;AACA,MAAIG,WAAWV,MAAf,EAAuB;AACrB,WAAOQ,GAAP;AACD,GAFD,MAEO;AACL;AACA,WAAOG,UAAUL,IAAV,EAAgB;AACrBM,eAAS,CAACjB,OAAOE,MAAP,CAAD,EAAiBE,cAAcC,MAAd,CAAjB;AADY,KAAhB,CAAP;AAGD;AACF;;AAED;;;;;AAKO,eAAeN,GAAf,CAAmBmB,UAAnB,EAA+B;AACpC,MAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClCA,qCACGA,UADH,EACgBA,UADhB;AAGD;AACD,MAAMC,MAAMjB,OAAOkB,IAAP,CAAYF,UAAZ,EAAwB,CAAxB,CAAZ;AACA,MAAMnB,MAAMG,OAAOmB,MAAP,CAAcH,UAAd,EAA0B,CAA1B,CAAZ;;AAEA,MAAMb,SAAS,cAAIE,IAAJ,CAASC,IAAT,CAAc,IAAd,CAAf;AACA,MAAMG,OAAO,KAAKG,GAAL,CAASK,GAAT,CAAb;;AAEA,MAAMG,WAAW,MAAMX,KAAKY,QAAL,EAAvB;AACA,MAAIC,MAAMd,QAAQL,MAAR,EAAgBN,GAAhB,EAAqBY,IAArB,EAA2BW,QAA3B,CAAV;AACA,SAAO,MAAME,IAAIC,UAAJ,EAAb;AACD","file":"out.js","sourcesContent":["import Gun from 'gun/gun'\nimport './value'\n\nconst instOf = (clazz = Object) => {\n  return (val) => {\n    return val instanceof clazz\n  }\n}\n\nconst notOriginator = (selfId) => {\n  return data => selfid !== Gun.node.soul(data)\n}\n\n// get('spouse').get('inout').val(cb)\nasync function calcOut(selfId, out, edge, v) {\n  const def = edge.get(out)\n  const propId = Gun.node.soul(v)\n  // // only if not referencing to self\n  if (propId !== selfId) {\n    return def\n  } else {\n    // find first other property that references a valid Object\n    return mapReduce(edge, {\n      filters: [instOf(Object), notOriginator(selfId)]\n    })\n  }\n}\n\n/*\nawait gun.get('mark').out({\n  spouse: 'bride'\n})\n*/\nexport async function out(navigation) {\n  if (typeof navigation === 'string') {\n    navigation = {\n      [navigation]: navigation\n    }\n  }\n  const key = Object.keys(navigation)[0]\n  const out = Object.values(navigation)[0]\n\n  const selfId = Gun.node.soul(this)\n  const edge = this.get(key)\n\n  const edgeNode = await edge.valAsync()\n  let res = calcOut(selfId, out, edge, edgeNode)\n  return await res.valueAsync()\n}"]}