{"version":3,"sources":["async/map.js"],"names":["$map","$addMap","node","transform","opt","Promise","resolve","reject","mapped","map","value","v","chain"],"mappings":";;;;;QAAgBA,I,GAAAA,I;QAOAC,O,GAAAA,O;AAPT,SAASD,IAAT,CAAcE,IAAd,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoC;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,SAASN,KAAKO,GAAL,CAASN,SAAT,EAAoBC,GAApB,EAAyBM,KAAzB,CAA+B;AAAA,aAAKC,CAAL;AAAA,KAA/B,CAAb;AACAL,YAAQE,MAAR;AACD,GAHM,CAAP;AAID;;AAEM,SAASP,OAAT,OAEJ;AAAA,MADDW,KACC,QADDA,KACC;;AACDA,QAAMZ,IAAN,GAAa,gBAAgBG,SAAhB,EAA2BC,GAA3B,EAAgC;AAC3C,WAAO,MAAMJ,KAAK,IAAL,EAAWG,SAAX,EAAsBC,GAAtB,CAAb;AACD,GAFD;AAGA,SAAOQ,KAAP;AACD","file":"map.js","sourcesContent":["export function $map(node, transform, opt) {\n  return new Promise(function (resolve, reject) {\n    let mapped = node.map(transform, opt).value(v => v)\n    resolve(mapped)\n  });\n}\n\nexport function $addMap({\n  chain\n}) {\n  chain.$map = async function (transform, opt) {\n    return await $map(this, transform, opt)\n  }\n  return chain\n}"]}