{"version":3,"sources":["async/fields.js"],"names":["$fields","$addFields","node","Promise","resolve","reject","value","Object","keys","v","chain","cb","opt"],"mappings":";;;;;QAAgBA,O,GAAAA,O;QAUAC,U,GAAAA,U;;AAJhB;;AANO,SAASD,OAAT,CAAiBE,IAAjB,EAAuB;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CH,SAAKI,KAAL,CAAW;AAAA,aAAKF,QAAQG,OAAOC,IAAP,CAAYC,CAAZ,CAAR,CAAL;AAAA,KAAX;AACD,GAFM,CAAP;AAGD;;AAMM,SAASR,UAAT,OAEJ;AAAA,MADDS,KACC,QADDA,KACC;;AACD,uBAAS;AACPA;AADO,GAAT;;AAIAA,QAAMV,OAAN,GAAgB,UAAUW,EAAV,EAAcC,GAAd,EAAmB;AACjC,WAAOZ,QAAQ,IAAR,EAAcW,EAAd,EAAkBC,GAAlB,CAAP;AACD,GAFD;AAGA,SAAOF,KAAP;AACD","file":"fields.js","sourcesContent":["export function $fields(node) {\n  return new Promise(function (resolve, reject) {\n    node.value(v => resolve(Object.keys(v)))\n  });\n}\n\nimport {\n  addValue\n} from '../value'\n\nexport function $addFields({\n  chain,\n}) {\n  addValue({\n    chain\n  })\n\n  chain.$fields = function (cb, opt) {\n    return $fields(this, cb, opt)\n  }\n  return chain\n}"]}