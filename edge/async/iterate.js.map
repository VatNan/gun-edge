{"version":3,"sources":["async/iterate.js"],"names":["$iterate","$addIterate","node","opts","Promise","resolve","reject","Object","assign","cb","chain"],"mappings":";;;;;QAIgBA,Q,GAAAA,Q;QASAC,W,GAAAA,W;;AAbhB;;AAIO,SAASD,QAAT,CAAkBE,IAAlB,EAAwBC,IAAxB,EAA8B;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CH,WAAOI,OAAOC,MAAP,CAAcL,IAAd,EAAoB;AACzBM,UAAIJ;AADqB,KAApB,CAAP;AAGA,0BAAQH,IAAR,EAAcC,IAAd;AACD,GALM,CAAP;AAMD;;AAEM,SAASF,WAAT,OAEJ;AAAA,MADDS,KACC,QADDA,KACC;;AACDA,QAAMV,QAAN,GAAiB,gBAAgBG,IAAhB,EAAsB;AACrC,WAAO,MAAMH,SAAS,IAAT,EAAeG,IAAf,CAAb;AACD,GAFD;AAGA,SAAOO,KAAP;AACD","file":"iterate.js","sourcesContent":["import {\n  iterate\n} from '../iterate'\n\nexport function $iterate(node, opts) {\n  return new Promise(function (resolve, reject) {\n    opts = Object.assign(opts, {\n      cb: resolve\n    })\n    iterate(node, opts)\n  })\n}\n\nexport function $addIterate({\n  chain\n}) {\n  chain.$iterate = async function (opts) {\n    return await $iterate(this, opts)\n  }\n  return chain\n}"]}