{"version":3,"sources":["timed.js"],"names":["timed","addTimed","node","opts","cb","nextObj","nextOpts","stopCondition","operation","interval","num","defaultStop","defaultNextObj","defaultNextOpts","Object","assign","defaultOp","obj","put","setTimeout","iterate","chain"],"mappings":";;;;;QAAgBA,K,GAAAA,K;QAsDAC,Q,GAAAA,Q;AAtDT,SAASD,KAAT,CAAeE,IAAf,EAAgC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACrC,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9BA,WAAO;AACLC,UAAID;AADC,KAAP;AAGD;;AALoC,cAejCA,IAfiC;AAAA,MAQnCC,EARmC,SAQnCA,EARmC;AAAA,MASnCC,OATmC,SASnCA,OATmC;AAAA,MAUnCC,QAVmC,SAUnCA,QAVmC;AAAA,MAWnCC,aAXmC,SAWnCA,aAXmC;AAAA,MAYnCC,SAZmC,SAYnCA,SAZmC;AAAA,6BAanCC,QAbmC;AAAA,MAanCA,QAbmC,kCAaxB,GAbwB;AAAA,wBAcnCC,GAdmC;AAAA,MAcnCA,GAdmC,6BAc7B,CAd6B;;;AAiBrC,MAAIC,cAAc,SAAdA,WAAc,OAEfR,IAFe,EAEN;AAAA,QADVO,GACU,QADVA,GACU;;AACV,WAAOA,MAAM,EAAb;AACD,GAJD;AAKA,MAAIE,iBAAiB,SAAjBA,cAAiB,CAACF,GAAD,EAAMP,IAAN,EAAe;AAClC,WAAO;AACLO,WAAKA,MAAM;AADN,KAAP;AAGD,GAJD;;AAMA,MAAIG,kBAAkB,SAAlBA,eAAkB,CAACV,IAAD,EAAOO,GAAP,EAAe;AACnC,WAAOI,OAAOC,MAAP,CAAcZ,IAAd,EAAoB;AACzBO;AADyB,KAApB,CAAP;AAGD,GAJD;;AAMA,MAAIM,YAAY,SAAZA,SAAY,CAACd,IAAD,EAAOe,GAAP,EAAYd,IAAZ,EAAqB;AACnCD,SAAKgB,GAAL,CAASD,GAAT;AACD,GAFD;;AAIAZ,YAAUA,WAAWO,cAArB;AACAN,aAAWA,YAAYO,eAAvB;AACAN,kBAAgBA,iBAAiBI,WAAjC;AACAH,cAAYA,aAAaQ,SAAzB;;AAEAG,aAAW,YAAM;AACf,QAAIF,MAAMH,OAAOC,MAAP,CAAcV,QAAQK,GAAR,EAAaP,IAAb,CAAd,CAAV;AACAK,cAAUN,IAAV,EAAgBe,GAAhB,EAAqBd,IAArB;AACA,QAAII,cAAcU,GAAd,EAAmBd,IAAnB,CAAJ,EAA8B;AAC5BC,SAAGM,GAAH;AACD;;AAEDU,YAAQlB,IAAR,EAAcI,SAASH,IAAT,EAAec,IAAIP,GAAnB,CAAd;AACD,GARD,EAQGD,QARH;AASD;;AAEM,SAASR,QAAT,QAEJ;AAAA,MADDoB,KACC,SADDA,KACC;;AACDA,QAAMrB,KAAN,GAAc,UAAUG,IAAV,EAAgB;AAC5B,WAAOH,MAAM,IAAN,EAAYG,IAAZ,CAAP;AACD,GAFD;AAGA,SAAOkB,KAAP;AACD","file":"timed.js","sourcesContent":["export function timed(node, opts = {}) {\n  if (typeof opts === 'function') {\n    opts = {\n      cb: opts\n    }\n  }\n\n  let {\n    cb,\n    nextObj,\n    nextOpts,\n    stopCondition,\n    operation,\n    interval = 100,\n    num = 0\n  } = opts\n\n  let defaultStop = ({\n    num\n  }, opts) => {\n    return num > 10\n  }\n  let defaultNextObj = (num, opts) => {\n    return {\n      num: num + 1\n    }\n  }\n\n  let defaultNextOpts = (opts, num) => {\n    return Object.assign(opts, {\n      num\n    })\n  }\n\n  let defaultOp = (node, obj, opts) => {\n    node.put(obj)\n  }\n\n  nextObj = nextObj || defaultNextObj\n  nextOpts = nextOpts || defaultNextOpts\n  stopCondition = stopCondition || defaultStop\n  operation = operation || defaultOp\n\n  setTimeout(() => {\n    let obj = Object.assign(nextObj(num, opts))\n    operation(node, obj, opts)\n    if (stopCondition(obj, opts)) {\n      cb(num)\n    }\n\n    iterate(node, nextOpts(opts, obj.num))\n  }, interval)\n}\n\nexport function addTimed({\n  chain\n}) {\n  chain.timed = function (opts) {\n    return timed(this, opts)\n  }\n  return chain\n}"]}