{"version":3,"sources":["timed.js"],"names":["timed","addTimed","node","opts","cb","nextObj","nextOpts","stopCondition","operation","interval","num","maxNum","defaultStop","defaultNextObj","defaultNextOpts","Object","assign","defaultOp","obj","put","setTimeout","iterate","chain"],"mappings":";;;;;QAAgBA,K,GAAAA,K;QAuDAC,Q,GAAAA,Q;AAvDT,SAASD,KAAT,CAAeE,IAAf,EAAgC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACrC,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9BA,WAAO;AACLC,UAAID;AADC,KAAP;AAGD;;AALoC,cAgBjCA,IAhBiC;AAAA,MAQnCC,EARmC,SAQnCA,EARmC;AAAA,MASnCC,OATmC,SASnCA,OATmC;AAAA,MAUnCC,QAVmC,SAUnCA,QAVmC;AAAA,MAWnCC,aAXmC,SAWnCA,aAXmC;AAAA,MAYnCC,SAZmC,SAYnCA,SAZmC;AAAA,6BAanCC,QAbmC;AAAA,MAanCA,QAbmC,kCAaxB,GAbwB;AAAA,wBAcnCC,GAdmC;AAAA,MAcnCA,GAdmC,6BAc7B,CAd6B;AAAA,2BAenCC,MAfmC;AAAA,MAenCA,MAfmC,gCAe1B,EAf0B;;;AAkBrC,MAAIC,cAAc,SAAdA,WAAc,OAEfT,IAFe,EAEN;AAAA,QADVO,GACU,QADVA,GACU;;AACV,WAAOA,MAAMC,MAAb;AACD,GAJD;AAKA,MAAIE,iBAAiB,SAAjBA,cAAiB,CAACH,GAAD,EAAMP,IAAN,EAAe;AAClC,WAAO;AACLO,WAAKA,MAAM;AADN,KAAP;AAGD,GAJD;;AAMA,MAAII,kBAAkB,SAAlBA,eAAkB,CAACX,IAAD,EAAOO,GAAP,EAAe;AACnC,WAAOK,OAAOC,MAAP,CAAcb,IAAd,EAAoB;AACzBO;AADyB,KAApB,CAAP;AAGD,GAJD;;AAMA,MAAIO,YAAY,SAAZA,SAAY,CAACf,IAAD,EAAOgB,GAAP,EAAYf,IAAZ,EAAqB;AACnCD,SAAKiB,GAAL,CAASD,GAAT;AACD,GAFD;;AAIAb,YAAUA,WAAWQ,cAArB;AACAP,aAAWA,YAAYQ,eAAvB;AACAP,kBAAgBA,iBAAiBK,WAAjC;AACAJ,cAAYA,aAAaS,SAAzB;;AAEAG,aAAW,YAAM;AACf,QAAIF,MAAMH,OAAOC,MAAP,CAAcX,QAAQK,GAAR,EAAaP,IAAb,CAAd,CAAV;AACAK,cAAUN,IAAV,EAAgBgB,GAAhB,EAAqBf,IAArB;AACA,QAAII,cAAcW,GAAd,EAAmBf,IAAnB,CAAJ,EAA8B;AAC5BC,SAAGM,GAAH;AACD;;AAEDW,YAAQnB,IAAR,EAAcI,SAASH,IAAT,EAAee,IAAIR,GAAnB,CAAd;AACD,GARD,EAQGD,QARH;AASD;;AAEM,SAASR,QAAT,QAEJ;AAAA,MADDqB,KACC,SADDA,KACC;;AACDA,QAAMtB,KAAN,GAAc,UAAUG,IAAV,EAAgB;AAC5B,WAAOH,MAAM,IAAN,EAAYG,IAAZ,CAAP;AACD,GAFD;AAGA,SAAOmB,KAAP;AACD","file":"timed.js","sourcesContent":["export function timed(node, opts = {}) {\n  if (typeof opts === 'function') {\n    opts = {\n      cb: opts\n    }\n  }\n\n  let {\n    cb,\n    nextObj,\n    nextOpts,\n    stopCondition,\n    operation,\n    interval = 100,\n    num = 0,\n    maxNum = 10\n  } = opts\n\n  let defaultStop = ({\n    num\n  }, opts) => {\n    return num > maxNum\n  }\n  let defaultNextObj = (num, opts) => {\n    return {\n      num: num + 1\n    }\n  }\n\n  let defaultNextOpts = (opts, num) => {\n    return Object.assign(opts, {\n      num\n    })\n  }\n\n  let defaultOp = (node, obj, opts) => {\n    node.put(obj)\n  }\n\n  nextObj = nextObj || defaultNextObj\n  nextOpts = nextOpts || defaultNextOpts\n  stopCondition = stopCondition || defaultStop\n  operation = operation || defaultOp\n\n  setTimeout(() => {\n    let obj = Object.assign(nextObj(num, opts))\n    operation(node, obj, opts)\n    if (stopCondition(obj, opts)) {\n      cb(num)\n    }\n\n    iterate(node, nextOpts(opts, obj.num))\n  }, interval)\n}\n\nexport function addTimed({\n  chain\n}) {\n  chain.timed = function (opts) {\n    return timed(this, opts)\n  }\n  return chain\n}"]}