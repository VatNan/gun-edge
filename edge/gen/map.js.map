{"version":3,"sources":["gen/map.js"],"names":["$map","$addMap","node","transform","operator","opt","nextResolve","promise","resolveAndReload","value","next","Promise","resolve","map","chain","condition"],"mappings":";;;;;QAAiBA,I,GAAAA,I;QAkBDC,O,GAAAA,O;;eAlBCD,I;;AAAV,SAAUA,IAAV,CAAeE,IAAf;AAAA,MACLC,SADK,QACLA,SADK;AAAA,2BAELC,QAFK;AAAA,MAELA,QAFK,iCAEM,KAFN;AAAA,MAGLC,GAHK,QAGLA,GAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAKDC,qBALC,WAKYC,OALZ;;AAMCC,0BAND,GAMoB,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,gBAAIH,WAAJ,EAAiBA,YAAY;AAC3BG,0BAD2B;AAE3BC,oBAAO;AAAA,uBAAMH,OAAN;AAAA;AAFoB,aAAZ;AAIjBA,sBAAU,IAAII,OAAJ,CAAY,UAACC,OAAD;AAAA,qBAAaN,cAAcM,OAA3B;AAAA,aAAZ,CAAV;AACA,mBAAOL,OAAP;AACD,WAbI;;AAcLC;AACAN,eAAKW,GAAL,CAASV,SAAT,EAAoBE,GAApB,EAAyBD,QAAzB,EAAmCI,gBAAnC;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAASP,OAAT,QAEJ;AAAA,MADDa,KACC,SADDA,KACC;;AACDA,QAAMd,IAAN,2BAAa;AAAA,+BACXI,QADW;AAAA,QACXA,QADW,kCACA,KADA;AAAA,QAEXD,SAFW,SAEXA,SAFW;AAAA,QAGXE,GAHW,SAGXA,GAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKLL,KAAK,IAAL,EAAW;AACfI,gCADe;AAEfW,kCAFe;AAGfZ,kCAHe;AAIfE;AAJe,aAAX,CALK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;AAYA,SAAOS,KAAP;AACD","file":"map.js","sourcesContent":["export function* $map(node, {\n  transform,\n  operator = 'val',\n  opt\n}) {\n  let nextResolve, promise;\n  const resolveAndReload = (value) => {\n    if (nextResolve) nextResolve({\n      value,\n      next: (() => promise)\n    });\n    promise = new Promise((resolve) => nextResolve = resolve);\n    return promise;\n  }\n  resolveAndReload();\n  node.map(transform, opt)[operator](resolveAndReload)\n}\n\nexport function $addMap({\n  chain\n}) {\n  chain.$map = function* ({\n    operator = 'val',\n    transform,\n    opt\n  }) {\n    yield $map(this, {\n      operator,\n      condition,\n      transform,\n      opt\n    })\n  }\n  return chain\n}"]}