{"version":3,"sources":["gen/map.js"],"names":["$map","$addMap","node","condition","transform","operator","opt","c","Promise","resolve","reject","map","val","chain"],"mappings":";;;;;QAAiBA,I,GAAAA,I;QAeDC,O,GAAAA,O;;eAfCD,I;;AAAV,SAAUA,IAAV,CAAeE,IAAf;AAAA,MACLC,SADK,QACLA,SADK;AAAA,MAELC,SAFK,QAELA,SAFK;AAAA,2BAGLC,QAHK;AAAA,MAGLA,QAHK,iCAGM,KAHN;AAAA,MAILC,GAJK,QAILA,GAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAMDC,WANC,GAMG,SAAJA,CAAI;AAAA,mBAAM,IAAN;AAAA,WANH;;AAOLJ,sBAAYA,aAAaI,CAAzB;;AAPK;AAAA,eAQEJ,UAAUD,IAAV,CARF;AAAA;AAAA;AAAA;;AAAA;AAAA,iBASG,IAAIM,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC3CR,iBAAKS,GAAL,CAASP,SAAT,EAAoBE,GAApB,EAAyBD,QAAzB,EAAmC;AAAA,qBAAOI,QAAQG,GAAR,CAAP;AAAA,aAAnC;AACD,WAFK,CATH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAASX,OAAT,QAEJ;AAAA,MADDY,KACC,SADDA,KACC;;AACDA,QAAMb,IAAN,2BAAa;AAAA,QACXG,SADW,SACXA,SADW;AAAA,+BAEXE,QAFW;AAAA,QAEXA,QAFW,kCAEA,KAFA;AAAA,QAGXD,SAHW,SAGXA,SAHW;AAAA,QAIXE,GAJW,SAIXA,GAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMLN,KAAK,IAAL,EAAW;AACfK,gCADe;AAEfF,kCAFe;AAGfC,kCAHe;AAIfE;AAJe,aAAX,CANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;AAaA,SAAOO,KAAP;AACD","file":"map.js","sourcesContent":["export function* $map(node, {\n  condition,\n  transform,\n  operator = 'val',\n  opt\n}) {\n  let c = () => true\n  condition = condition || c\n  while (condition(node)) {\n    yield new Promise(function (resolve, reject) {\n      node.map(transform, opt)[operator](val => resolve(val))\n    });\n  }\n}\n\nexport function $addMap({\n  chain\n}) {\n  chain.$map = function* ({\n    condition,\n    operator = 'val',\n    transform,\n    opt\n  }) {\n    yield $map(this, {\n      operator,\n      condition,\n      transform,\n      opt\n    })\n  }\n  return chain\n}"]}