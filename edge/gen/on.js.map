{"version":3,"sources":["gen/on.js"],"names":["$on","$addOn","node","nextResolve","promise","resolveAndReload","value","next","Promise","resolve","on","chain"],"mappings":";;;;;QAAiBA,G,GAAAA,G;QAcDC,M,GAAAA,M;;eAdCD,G;;AAAV,SAAUA,GAAV,CAAcE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,qBADC,WACYC,OADZ;;AAECC,0BAFD,GAEoB,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,gBAAIH,WAAJ,EAAiBA,YAAY;AAC3BG,0BAD2B;AAE3BC,oBAAO;AAAA,uBAAMH,OAAN;AAAA;AAFoB,aAAZ;AAIjBA,sBAAU,IAAII,OAAJ,CAAY,UAACC,OAAD;AAAA,qBAAaN,cAAcM,OAA3B;AAAA,aAAZ,CAAV;AACA,mBAAOL,OAAP;AACD,WATI;;AAULC;AACAH,eAAKQ,EAAL,CAAQL,gBAAR;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAASJ,MAAT,OAEJ;AAAA,MADDU,KACC,QADDA,KACC;;AACDA,QAAMX,GAAN,2BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJA,IAAI,IAAJ,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;AAGA,SAAOW,KAAP;AACD","file":"on.js","sourcesContent":["export function* $on(node) {\n  let nextResolve, promise;\n  const resolveAndReload = (value) => {\n    if (nextResolve) nextResolve({\n      value,\n      next: (() => promise)\n    });\n    promise = new Promise((resolve) => nextResolve = resolve);\n    return promise;\n  }\n  resolveAndReload();\n  node.on(resolveAndReload)\n}\n\nexport function $addOn({\n  chain\n}) {\n  chain.$on = function* () {\n    yield $on(this)\n  }\n  return chain\n}"]}