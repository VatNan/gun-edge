{"version":3,"sources":["out.js"],"names":["instOf","clazz","Object","val","notOriginator","node","selfId","selfid","soul","data"],"mappings":";;AAAA;;AAIA,IAAMA,SAAS,SAATA,MAAS,GAAoB;AAAA,MAAnBC,KAAmB,uEAAXC,MAAW;;AACjC,SAAO,UAACC,GAAD,EAAS;AACd,WAAOA,eAAeF,KAAtB;AACD,GAFD;AAGD,CAJD;;AAMA,IAAMG,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,MAAP,EAAkB;AACtC,SAAO;AAAA,WAAQC,WAAWF,KAAKG,IAAL,CAAUC,IAAV,CAAnB;AAAA,GAAP;AACD,CAFD;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"out.js","sourcesContent":["import {\n  addValue\n} from './value'\n\nconst instOf = (clazz = Object) => {\n  return (val) => {\n    return val instanceof clazz\n  }\n}\n\nconst notOriginator = (node, selfId) => {\n  return data => selfid !== node.soul(data)\n}\n\n// // get('spouse').get('inout').val(cb)\n// async function calcOut(node, selfId, out, edge, v) {\n//   const def = edge.get(out)\n//   const propId = node.soul(v)\n//   // // only if not referencing to self\n//   if (propId !== selfId) {\n//     return def\n//   } else {\n//     // find first other property that references a valid Object\n//     let targetNode = await\n//     return node.$mapReduce({\n//       filters: [\n//         instOf(Object),\n//         notOriginator(node, selfId)\n//         // type?\n//       ]\n//     })\n\n//     // return first field of filtered ones\n//     let fields = await targetNode.$fields()\n//     return fields[0]\n//   }\n// }\n\n// /*\n// await gun.get('mark').out({\n//   spouse: 'bride'\n// })\n// */\n// export async function out(node, navigation) {\n//   if (typeof navigation === 'string') {\n//     navigation = {\n//       [navigation]: navigation\n//     }\n//   }\n//   const key = Object.keys(navigation)[0]\n//   const out = Object.values(navigation)[0]\n\n//   const selfId = node.soul(this)\n//   const edge = this.get(key)\n\n//   const edgeNode = await edge.valAsync()\n//   let res = calcOut(node, selfId, out, edge, edgeNode)\n//   return await res.valueAsync()\n// }"]}