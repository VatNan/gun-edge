{"version":3,"sources":["all.js"],"names":["add","Gun","allNames","chains","$addAll","addCount","addEach","addFields","addInspect","addLive","addLocal","addMapReduce","addNo","addRecurse","addValue","capitalize","str","charAt","toUpperCase","slice","names","forEach","nameCap","name","chain","addAsync","addDate","addFilter","addOut"],"mappings":";;;;;;QAgEgBA,G,GAAAA,G;;kBAwCD,UAAUC,GAAV,EAAe;AAC5B,SAAOD,sBAAIC,GAAJ,SAAYC,QAAZ,EAAP;AACD,C;;AA1GD;;AAIA;;AAGA;;AAGA;;AAKA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAMA;;AAGA;;AANA;AACA;AACA;AAQA,IAAMC,SAAS;AACbC,yBADa;AAEbC,2BAFa;AAGbC,wBAHa;AAIbC,8BAJa;AAKbC,iCALa;AAMbC,wBANa;AAObC,2BAPa;AAQbC,uCARa;AASbC,kBATa;AAUbC,iCAVa;AAWbC;AAXa,CAAf;AAjCA;;AA+CA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAEM,SAASnB,GAAT,CAAaC,GAAb,EAA4B;AAAA,oCAAPmB,KAAO;AAAPA,SAAO;AAAA;;AACjCA,QAAMC,OAAN,CAAc,gBAAQ;AACpB,QAAIC,UAAUP,WAAWQ,IAAX,CAAd;AACApB,WAAO,QAAQmB,OAAf,EAAwBrB,IAAIuB,KAA5B,EAAmCvB,GAAnC;AACD,GAHD;AAIA,SAAOA,GAAP;AACD;;AAED,IAAMC,WAAW,CACf,OADe,EAEf,MAFe,EAGf,MAHe,EAIf,QAJe,EAKf,QALe,EAMf,SANe,EAOf,MAPe,EAQf,OARe,EASf,WATe,EAUf,IAVe;AAWf;AACA,SAZe,EAaf,OAbe,CAAjB;;QAiBEuB,Q,GAAAA,Q;QACAC,O;QACApB,O;QACAC,S;QACAoB,S;QACAnB,U;QACAC,O;QACAC,Q;QACAC,Y;QACAC,K;QACAgB,M,GAAAA,M;QACAf,U;QACAC,Q","file":"all.js","sourcesContent":["import {\n  $addAll\n} from './async'\n\nimport {\n  addCount\n} from './count'\nimport {\n  addDate\n} from './date'\nimport {\n  addEach\n} from './each'\n// import { addEdge } from './edge'\n\nimport {\n  addFields\n} from './fields'\nimport {\n  addFilter\n} from './filter'\nimport {\n  addInspect\n} from './inspect'\nimport {\n  addLive\n} from './live'\nimport {\n  addLocal\n} from './local'\nimport {\n  addMapReduce\n} from './map-reduce'\nimport {\n  addNo\n} from './no'\n// import {\n//   addOut\n// } from './out'\nimport {\n  addRecurse\n} from './recurse'\nimport {\n  addValue\n} from './value'\n\nconst chains = {\n  $addAll,\n  addCount,\n  addEach,\n  addFields,\n  addInspect,\n  addLive,\n  addLocal,\n  addMapReduce,\n  addNo,\n  addRecurse,\n  addValue\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n  names.forEach(name => {\n    let nameCap = capitalize(name)\n    chains['add' + nameCap](Gun.chain, Gun)\n  })\n  return Gun\n}\n\nconst allNames = [\n  'async',\n  'date',\n  'each',\n  'fields',\n  'filter',\n  'inspect',\n  'live',\n  'local',\n  'mapReduce',\n  'no',\n  // 'out',\n  'recurse',\n  'value'\n]\n\nexport {\n  addAsync,\n  addDate,\n  addEach,\n  addFields,\n  addFilter,\n  addInspect,\n  addLive,\n  addLocal,\n  addMapReduce,\n  addNo,\n  addOut,\n  addRecurse,\n  addValue\n}\n\nexport default function (Gun) {\n  return add(Gun, ...allNames)\n}"]}