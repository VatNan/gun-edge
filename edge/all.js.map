{"version":3,"sources":["all.js"],"names":["add","Gun","allNames","chains","addAsync","addCount","addDate","addEach","addFields","addInspect","addLive","addIterate","addLocal","addMapReduce","addNo","addRecurse","addValue","capitalize","str","charAt","toUpperCase","slice","names","forEach","nameCap","name","fun","chain"],"mappings":";;;;;;QAqEgBA,G,GAAAA,G;;kBA8CD,UAAUC,GAAV,EAAe;AAC5B,SAAOD,sBAAIC,GAAJ,SAAYC,QAAZ,EAAP;AACD,C;;AArHD;;AAIA;;AAGA;;AAGA;;AAKA;;AAMA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAMA;;AAGA;;AANA;AACA;AACA;;AAvBA;AACA;AACA;AA6BA,IAAMC,SAAS;AACbC,0BADa;AAEbC,2BAFa;AAGbC,wBAHa;AAIbC,wBAJa;AAKbC,8BALa;AAMbC,iCANa;AAObC,wBAPa;AAQbC,iCARa;AASbC,2BATa;AAUbC,uCAVa;AAWbC,kBAXa;AAYbC,iCAZa;AAabC;AAba,CAAf;AApCA;;AAoDA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAEM,SAASrB,GAAT,CAAaC,GAAb,EAA4B;AAAA,oCAAPqB,KAAO;AAAPA,SAAO;AAAA;;AACjCA,QAAMC,OAAN,CAAc,gBAAQ;AACpB,QAAIC,UAAUP,WAAWQ,IAAX,CAAd;AACA,QAAIC,MAAM,QAAQF,OAAlB;AACArB,WAAOuB,GAAP,EAAY;AACVC,aAAO1B,IAAI0B,KADD;AAEV1B;AAFU,KAAZ;AAID,GAPD;AAQA,SAAOA,GAAP;AACD;;AAED,IAAMC,WAAW,CACf,OADe,EAEf,MAFe,EAGf,MAHe,EAIf,QAJe;AAKf;AACA,SANe,EAOf,MAPe,EAQf,SARe,EASf,OATe,EAUf,WAVe,EAWf,IAXe;AAYf;AACA,SAbe,EAcf,OAde,CAAjB;;QAkBEE,Q;QACAE,O;QACAC,O;QACAC,S;QAEAC,U;QACAC,O;QACAC,U;QACAC,Q;QACAC,Y;QACAC,K;QAEAC,U;QACAC,Q","file":"all.js","sourcesContent":["import {\n  $addAll as addAsync\n} from './async'\n\nimport {\n  addCount\n} from './count'\nimport {\n  addDate\n} from './date'\nimport {\n  addEach\n} from './each'\n// import { addEdge } from './edge'\n\nimport {\n  addFields\n} from './fields'\n// import {\n//   addFilter\n// } from './filter'\nimport {\n  addInspect\n} from './inspect'\nimport {\n  addLive\n} from './live'\nimport {\n  addIterate\n} from './iterate'\nimport {\n  addLocal\n} from './local'\nimport {\n  addMapReduce\n} from './map-reduce'\nimport {\n  addNo\n} from './no'\n// import {\n//   addOut\n// } from './out'\nimport {\n  addRecurse\n} from './recurse'\nimport {\n  addValue\n} from './value'\n\nconst chains = {\n  addAsync,\n  addCount,\n  addDate,\n  addEach,\n  addFields,\n  addInspect,\n  addLive,\n  addIterate,\n  addLocal,\n  addMapReduce,\n  addNo,\n  addRecurse,\n  addValue\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n  names.forEach(name => {\n    let nameCap = capitalize(name)\n    let fun = 'add' + nameCap\n    chains[fun]({\n      chain: Gun.chain,\n      Gun\n    })\n  })\n  return Gun\n}\n\nconst allNames = [\n  'async',\n  'date',\n  'each',\n  'fields',\n  // 'filter',\n  'inspect',\n  'live',\n  'iterate',\n  'local',\n  'mapReduce',\n  'no',\n  // 'out',\n  'recurse',\n  'value'\n]\n\nexport {\n  addAsync,\n  addDate,\n  addEach,\n  addFields,\n  // addFilter,\n  addInspect,\n  addLive,\n  addIterate,\n  addLocal,\n  addMapReduce,\n  addNo,\n  // addOut,\n  addRecurse,\n  addValue\n}\n\nexport default function (Gun) {\n  return add(Gun, ...allNames)\n}"]}