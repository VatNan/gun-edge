{"version":3,"sources":["iterate.js"],"names":["iterate","addIterate","node","opts","cb","nextObj","nextOpts","stopCondition","interval","num","defaultStop","defaultNextObj","defaultNextOpts","Object","assign","setTimeout","obj","put","chain"],"mappings":";;;;;QAAgBA,O,GAAAA,O;QAgDAC,U,GAAAA,U;AAhDT,SAASD,OAAT,CAAiBE,IAAjB,EAAkC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACvC,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9BA,WAAO;AACLC,UAAID;AADC,KAAP;AAGD;;AALsC,cAcnCA,IAdmC;AAAA,MAQrCC,EARqC,SAQrCA,EARqC;AAAA,MASrCC,OATqC,SASrCA,OATqC;AAAA,MAUrCC,QAVqC,SAUrCA,QAVqC;AAAA,MAWrCC,aAXqC,SAWrCA,aAXqC;AAAA,6BAYrCC,QAZqC;AAAA,MAYrCA,QAZqC,kCAY1B,GAZ0B;AAAA,wBAarCC,GAbqC;AAAA,MAarCA,GAbqC,6BAa/B,CAb+B;;;AAgBvC,MAAIC,cAAc,SAAdA,WAAc,OAEfP,IAFe,EAEN;AAAA,QADVM,GACU,QADVA,GACU;;AACV,WAAOA,MAAM,EAAb;AACD,GAJD;AAKA,MAAIE,iBAAiB,SAAjBA,cAAiB,CAACF,GAAD,EAAMN,IAAN,EAAe;AAClC,WAAO;AACLM,WAAKA,MAAM;AADN,KAAP;AAGD,GAJD;;AAMA,MAAIG,kBAAkB,SAAlBA,eAAkB,CAACT,IAAD,EAAOM,GAAP,EAAe;AACnC,WAAOI,OAAOC,MAAP,CAAcX,IAAd,EAAoB;AACzBM;AADyB,KAApB,CAAP;AAGD,GAJD;;AAMAJ,YAAUA,WAAWM,cAArB;AACAL,aAAWA,YAAYM,eAAvB;AACAL,kBAAgBA,iBAAiBG,WAAjC;;AAEAK,aAAW,YAAM;AACf,QAAIC,MAAMH,OAAOC,MAAP,CAAcT,QAAQI,GAAR,EAAaN,IAAb,CAAd,CAAV;AACAD,SAAKe,GAAL,CAASD,GAAT;AACA,QAAIT,cAAcS,GAAd,EAAmBb,IAAnB,CAAJ,EAA8B;AAC5BC,SAAGK,GAAH;AACD;;AAEDT,YAAQE,IAAR,EAAcI,SAASH,IAAT,EAAea,IAAIP,GAAnB,CAAd;AACD,GARD,EAQGD,QARH;AASD;;AAEM,SAASP,UAAT,QAEJ;AAAA,MADDiB,KACC,SADDA,KACC;;AACDA,QAAMlB,OAAN,GAAgB,UAAUG,IAAV,EAAgB;AAC9B,WAAOH,QAAQ,IAAR,EAAcG,IAAd,CAAP;AACD,GAFD;AAGA,SAAOe,KAAP;AACD","file":"iterate.js","sourcesContent":["export function iterate(node, opts = {}) {\n  if (typeof opts === 'function') {\n    opts = {\n      cb: opts\n    }\n  }\n\n  let {\n    cb,\n    nextObj,\n    nextOpts,\n    stopCondition,\n    interval = 100,\n    num = 0\n  } = opts\n\n  let defaultStop = ({\n    num\n  }, opts) => {\n    return num > 10\n  }\n  let defaultNextObj = (num, opts) => {\n    return {\n      num: num + 1\n    }\n  }\n\n  let defaultNextOpts = (opts, num) => {\n    return Object.assign(opts, {\n      num\n    })\n  }\n\n  nextObj = nextObj || defaultNextObj\n  nextOpts = nextOpts || defaultNextOpts\n  stopCondition = stopCondition || defaultStop\n\n  setTimeout(() => {\n    let obj = Object.assign(nextObj(num, opts))\n    node.put(obj)\n    if (stopCondition(obj, opts)) {\n      cb(num)\n    }\n\n    iterate(node, nextOpts(opts, obj.num))\n  }, interval)\n}\n\nexport function addIterate({\n  chain\n}) {\n  chain.iterate = function (opts) {\n    return iterate(this, opts)\n  }\n  return chain\n}"]}